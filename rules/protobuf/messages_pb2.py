# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: messages.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='messages.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\x0emessages.proto\"\xfd\x01\n\x05Piece\x12$\n\npiece_type\x18\x01 \x01(\x0e\x32\x10.Piece.PieceType\x12\x1b\n\x05\x63olor\x18\x02 \x01(\x0e\x32\x0c.Piece.Color\x12\x14\n\x0cpiece_number\x18\x03 \x01(\x05\x12\x0b\n\x01q\x18\x04 \x01(\x05H\x00\x12\x0b\n\x01r\x18\x05 \x01(\x05H\x01\"F\n\tPieceType\x12\x07\n\x03\x42\x45\x45\x10\x00\x12\n\n\x06SPIDER\x10\x01\x12\n\n\x06\x42\x45\x45TLE\x10\x02\x12\x0f\n\x0bGRASSHOPPER\x10\x03\x12\x07\n\x03\x41NT\x10\x04\"\x1d\n\x05\x43olor\x12\t\n\x05WHITE\x10\x00\x12\t\n\x05\x42LACK\x10\x01\x42\x0c\n\nnullable_qB\x0c\n\nnullable_r\"#\n\tGameBoard\x12\x16\n\x06pieces\x18\x01 \x03(\x0b\x32\x06.Pieceb\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_PIECE_PIECETYPE = _descriptor.EnumDescriptor(
  name='PieceType',
  full_name='Piece.PieceType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='BEE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SPIDER', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BEETLE', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GRASSHOPPER', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ANT', index=4, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=143,
  serialized_end=213,
)
_sym_db.RegisterEnumDescriptor(_PIECE_PIECETYPE)

_PIECE_COLOR = _descriptor.EnumDescriptor(
  name='Color',
  full_name='Piece.Color',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='WHITE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BLACK', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=215,
  serialized_end=244,
)
_sym_db.RegisterEnumDescriptor(_PIECE_COLOR)


_PIECE = _descriptor.Descriptor(
  name='Piece',
  full_name='Piece',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='piece_type', full_name='Piece.piece_type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='color', full_name='Piece.color', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='piece_number', full_name='Piece.piece_number', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='q', full_name='Piece.q', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='r', full_name='Piece.r', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _PIECE_PIECETYPE,
    _PIECE_COLOR,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='nullable_q', full_name='Piece.nullable_q',
      index=0, containing_type=None, fields=[]),
    _descriptor.OneofDescriptor(
      name='nullable_r', full_name='Piece.nullable_r',
      index=1, containing_type=None, fields=[]),
  ],
  serialized_start=19,
  serialized_end=272,
)


_GAMEBOARD = _descriptor.Descriptor(
  name='GameBoard',
  full_name='GameBoard',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pieces', full_name='GameBoard.pieces', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=274,
  serialized_end=309,
)

_PIECE.fields_by_name['piece_type'].enum_type = _PIECE_PIECETYPE
_PIECE.fields_by_name['color'].enum_type = _PIECE_COLOR
_PIECE_PIECETYPE.containing_type = _PIECE
_PIECE_COLOR.containing_type = _PIECE
_PIECE.oneofs_by_name['nullable_q'].fields.append(
  _PIECE.fields_by_name['q'])
_PIECE.fields_by_name['q'].containing_oneof = _PIECE.oneofs_by_name['nullable_q']
_PIECE.oneofs_by_name['nullable_r'].fields.append(
  _PIECE.fields_by_name['r'])
_PIECE.fields_by_name['r'].containing_oneof = _PIECE.oneofs_by_name['nullable_r']
_GAMEBOARD.fields_by_name['pieces'].message_type = _PIECE
DESCRIPTOR.message_types_by_name['Piece'] = _PIECE
DESCRIPTOR.message_types_by_name['GameBoard'] = _GAMEBOARD

Piece = _reflection.GeneratedProtocolMessageType('Piece', (_message.Message,), dict(
  DESCRIPTOR = _PIECE,
  __module__ = 'messages_pb2'
  # @@protoc_insertion_point(class_scope:Piece)
  ))
_sym_db.RegisterMessage(Piece)

GameBoard = _reflection.GeneratedProtocolMessageType('GameBoard', (_message.Message,), dict(
  DESCRIPTOR = _GAMEBOARD,
  __module__ = 'messages_pb2'
  # @@protoc_insertion_point(class_scope:GameBoard)
  ))
_sym_db.RegisterMessage(GameBoard)


# @@protoc_insertion_point(module_scope)
